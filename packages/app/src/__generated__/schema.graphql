schema {
  query: Query
  mutation: Mutation
}
"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy("The URL that specifies the behaviour of this scalar." url: String!) on SCALAR
type User {
  id: Int!
  name: String
  email: String!
  passwordHash: String!
  refreshToken: String
  refreshTokenExpiresAt: DateTime
  posts: [Post!]!
}
type Post {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  content: String
  published: Boolean!
  viewCount: Int!
  author: User
}
input UserUniqueInput {
  id: Int
  email: String
}
input UserCreateWhereInput {
  email: String!
  name: String!
  password: String!
}
input UserLoginInput {
  email: String!
  password: String!
}
type UserAuthResponse {
  jwt: String!
  refreshToken: String!
}
type RefreshTokenResponse {
  jwt: String!
}
input RefreshTokenInput {
  refreshToken: String!
  fingerPrintHash: String!
}
input PostCreateInput {
  title: String!
  content: String
}
input PostOrderByUpdatedAtInput {
  updatedAt: SortOrder!
}
enum SortOrder {
  asc
  desc
}
"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime
type Query {
  postById(id: Int): Post
  feed(searchString: String, skip: Int, take: Int, orderBy: PostOrderByUpdatedAtInput): [Post!]!
  draftsByUser(userUniqueInput: UserUniqueInput!): [Post]
  whoami: User
  allUsers: [User!]!
  logout: LogoutResponse!
  login(data: UserLoginInput!): UserAuthResponse
  refreshToken(data: RefreshTokenInput!): RefreshTokenResponse
}
type Mutation {
  signupUser(data: UserCreateWhereInput!): UserAuthResponse!
  createDraft(data: PostCreateInput!, authorEmail: String!): Post
  togglePublishPost(id: Int!): Post
  incrementPostViewCount(id: Int!): Post
  deletePost(id: Int!): Post
}
type LogoutResponse {
  ok: Boolean!
}
